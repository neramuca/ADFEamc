{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "ADFEamc02"
		},
		"SQLDB_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"SQLDB\""
		},
		"adls02_accountKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"accountKey\"de \"adls02\""
		},
		"azbslink01_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"azbslink01\""
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"AzureSynapseAnalytics1\""
		},
		"adls02_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cuentaerasmo.dfs.core.windows.net"
		},
		"ServicioazkvErasmo_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://azkvErasmo.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Conexion a la bbdd TaxiData",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQLDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls02')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "AZURE DATA LAKE STORAGE 2",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adls02_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('adls02_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azbslink01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Blob Storage link 01",
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('azbslink01_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ServicioazkvErasmo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "servicio vinculado al repositorio de Azure Key Vault",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ServicioazkvErasmo_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "medallion",
						"type": "nvarchar"
					},
					{
						"name": "hack_license",
						"type": "nvarchar"
					},
					{
						"name": "vendor_id",
						"type": "nvarchar"
					},
					{
						"name": "rate_code",
						"type": "nvarchar"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "nvarchar"
					},
					{
						"name": "pickup_datetime",
						"type": "nvarchar"
					},
					{
						"name": "dropoff_datetime",
						"type": "nvarchar"
					},
					{
						"name": "passenger_count",
						"type": "nvarchar"
					},
					{
						"name": "trip_time_in_secs",
						"type": "nvarchar"
					},
					{
						"name": "trip_distance",
						"type": "nvarchar"
					},
					{
						"name": "pickup_longitude",
						"type": "nvarchar"
					},
					{
						"name": "pickup_latitude",
						"type": "nvarchar"
					},
					{
						"name": "dropoff_longitude",
						"type": "nvarchar"
					},
					{
						"name": "dropoff_latitude",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TripData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "medallion",
						"type": "nvarchar"
					},
					{
						"name": "hack_license",
						"type": "nvarchar"
					},
					{
						"name": "vendor_id",
						"type": "nvarchar"
					},
					{
						"name": "pickup_datetime",
						"type": "nvarchar"
					},
					{
						"name": "payment_type",
						"type": "nvarchar"
					},
					{
						"name": "fare_amount",
						"type": "nvarchar"
					},
					{
						"name": "surcharge",
						"type": "nvarchar"
					},
					{
						"name": "mta_tax",
						"type": "nvarchar"
					},
					{
						"name": "tip_amount",
						"type": "nvarchar"
					},
					{
						"name": "tolls_amount",
						"type": "nvarchar"
					},
					{
						"name": "total_amount",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TripFares"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TripFaresCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls02",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Tripfares.csv",
						"fileSystem": "stagging"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "medallion",
						"type": "String"
					},
					{
						"name": "hack_license",
						"type": "String"
					},
					{
						"name": "vendor_id",
						"type": "String"
					},
					{
						"name": "pickup_datetime",
						"type": "String"
					},
					{
						"name": "payment_type",
						"type": "String"
					},
					{
						"name": "fare_amount",
						"type": "String"
					},
					{
						"name": "surcharge",
						"type": "String"
					},
					{
						"name": "mta_tax",
						"type": "String"
					},
					{
						"name": "tip_amount",
						"type": "String"
					},
					{
						"name": "tolls_amount",
						"type": "String"
					},
					{
						"name": "total_amount",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TripdataCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls02",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Trip-data.csv",
						"fileSystem": "stagging"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "medallion",
						"type": "String"
					},
					{
						"name": "hack_license",
						"type": "String"
					},
					{
						"name": "vendor_id",
						"type": "String"
					},
					{
						"name": "rate_code",
						"type": "String"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "String"
					},
					{
						"name": "pickup_datetime",
						"type": "String"
					},
					{
						"name": "dropoff_datetime",
						"type": "String"
					},
					{
						"name": "passenger_count",
						"type": "String"
					},
					{
						"name": "trip_time_in_secs",
						"type": "String"
					},
					{
						"name": "trip_distance",
						"type": "String"
					},
					{
						"name": "pickup_longitude",
						"type": "String"
					},
					{
						"name": "pickup_latitude",
						"type": "String"
					},
					{
						"name": "dropoff_longitude",
						"type": "String"
					},
					{
						"name": "dropoff_latitude",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adls02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AggregatedTaxiData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "AggregateTaxiData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JoinAndAggregateData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TripdataCsv",
								"type": "DatasetReference"
							},
							"name": "TripDataCSV"
						},
						{
							"dataset": {
								"referenceName": "TripFaresCSV",
								"type": "DatasetReference"
							},
							"name": "TripFaresCSV"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AggregatedTaxiData",
								"type": "DatasetReference"
							},
							"name": "SynapseSink"
						}
					],
					"transformations": [
						{
							"name": "InnerJoinWithTripFares"
						},
						{
							"name": "AggregateByPaymentType"
						}
					],
					"script": "source(output(\n\t\tmedallion as string,\n\t\thack_license as string,\n\t\tvendor_id as string,\n\t\trate_code as string,\n\t\tstore_and_fwd_flag as string,\n\t\tpickup_datetime as string,\n\t\tdropoff_datetime as string,\n\t\tpassenger_count as string,\n\t\ttrip_time_in_secs as string,\n\t\ttrip_distance as string,\n\t\tpickup_longitude as string,\n\t\tpickup_latitude as string,\n\t\tdropoff_longitude as string,\n\t\tdropoff_latitude as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> TripDataCSV\nsource(output(\n\t\tmedallion as string,\n\t\thack_license as string,\n\t\tvendor_id as string,\n\t\tpickup_datetime as string,\n\t\tpayment_type as string,\n\t\tfare_amount as string,\n\t\tsurcharge as string,\n\t\tmta_tax as string,\n\t\ttip_amount as string,\n\t\ttolls_amount as string,\n\t\ttotal_amount as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> TripFaresCSV\nTripDataCSV, TripFaresCSV union(byName: true)~> InnerJoinWithTripFares\nInnerJoinWithTripFares aggregate(groupBy(payment_type),\n\tTarifa_Media = avg(toInteger(total_amount)),\n\t\ttotal_trip_distance = sum(toInteger(trip_distance))) ~> AggregateByPaymentType\nAggregateByPaymentType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SynapseSink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TripdataCsv')]",
				"[concat(variables('factoryId'), '/datasets/TripFaresCSV')]",
				"[concat(variables('factoryId'), '/datasets/AggregatedTaxiData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TripData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "medallion",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "medallion",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "hack_license",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "hack_license",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "vendor_id",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "vendor_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "rate_code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "rate_code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "store_and_fwd_flag",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "store_and_fwd_flag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "pickup_datetime",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "pickup_datetime",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "dropoff_datetime",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "dropoff_datetime",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "passenger_count",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "passenger_count",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "trip_time_in_secs",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "trip_time_in_secs",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "trip_distance",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "trip_distance",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "pickup_longitude",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "pickup_longitude",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "pickup_latitude",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "pickup_latitude",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "dropoff_longitude",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "dropoff_longitude",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "dropoff_latitude",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "dropoff_latitude",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TripdataCsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Tripfare",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "medallion",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "medallion",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "hack_license",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "hack_license",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "vendor_id",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "vendor_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "pickup_datetime",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "pickup_datetime",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "payment_type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "payment_type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "fare_amount",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "fare_amount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "surcharge",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "surcharge",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "mta_tax",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "mta_tax",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "tip_amount",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "tip_amount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "tolls_amount",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "tolls_amount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "total_amount",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "total_amount",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TripFaresCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "JoinAndAggregateData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "TripData",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Tripfare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "JoinAndAggregateData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TripDataCSV": {},
									"TripFaresCSV": {},
									"SynapseSink": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "adls02",
									"type": "LinkedServiceReference"
								},
								"folderPath": "stagging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/TripdataCsv')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/datasets/TripFaresCSV')]",
				"[concat(variables('factoryId'), '/dataflows/JoinAndAggregateData')]",
				"[concat(variables('factoryId'), '/linkedServices/adls02')]"
			]
		}
	]
}